Git commit  = git commit -m "Nome do commit"

Git ^ -> esse comando com circunflexo " ^ " nos mostra
estamos fazendo um commit ao primeiro pai do main.
exemplo01 
"git commit main^" = Então, dizer main^ é equivalente 
a "o primeiro pai do main".

exemplo02 
"git commit main" = main^^ é o avô (ancestral de segunda geração) do main

Git branch -> esse comando chamado de (git branch "Nome do Ramo")
significa que estamos criando uma ramificação do codigo main
para usarmos como teste ou verificação que queremos.
Para que o github saiba em qual ramos vamos salvar essas 
modificações devemos usar outro comando chamado.

Git checkout -> esse comando (git checkout "nome do ramo")
verifica em qual ramificação estamos trabalhando seja salvar 
mudar ou usar.

Git merge -> o comando (git merge "Nome do Ramo") vai 
comparar os commit do ramo que vc criou com o
ramo MAIN que seria nosso principal, sendo assim ele vai consertar
as diferenças que eles possuem.
Para juntar esses dois ramos que seria o 
"ramo teste" e o ramo "Main" vamos usar dessa forma
(git merge "ramo teste" )
 
Git rebase -> esse comando tem o mesmo sentido do "merge"
fazendo a comparação e juntando os Ramos que se possa 
estar trabalhando.

Git HEAD -> ele faz o apontamento ou mostra em qual
foi o ultimo checkout e o que esta atualmente ativo

